title: "Sergio Transcriptions. From images to research data"
description: > 
  This project offers a workflow to process documents from Sergio Mosquera's transcriptions of Libro venta esclavo (1810) fom Notaria Primera de Quibdó.

  In this project, we will:
  - Process the existing doc-level metadata file
  - Read a folder of image files ([JPG](https://app.box.com/folder/235653219613))
  - Split the images into single-page images for processing. Note that many documents should not be split.
  - Create a Hugging Face Dataset
  - Transcribe the images using the Qwen model in Lightning.ai
  - Process the transcriptions to extract structured data
  - Publish the project in a static site (TODO txt and PDF)
  - Remove black and purple background from images

vars:
  name: "Sergio Notebooks"
  language: "es"
  text_direction: 'horizontal-lr' #['horizontal-lr', 'horizontal-rl', 'vertical-lr', 'vertical-rl']
  version: "0.0.0"
  project_folder: "sergio_notebooks" # Change this to run on different folders
  image_folder: "${vars.exported_data_folder}/images"
  metadata_file: "${vars.project_folder}/assets/Base_de_datos_Cuadernos_Sergio_Notaría_Primera_de_Quibdó_(1808-1825).xlsx"
  split_image_folder: "${vars.project_folder}/assets/splits"
  cropped_image_folder: "${vars.project_folder}/assets/cropped"
  rotated_image_folder: "${vars.project_folder}/assets/rotated"
  background_removed_image_folder: "${vars.project_folder}/assets/background_removed"
  txt_folder: "${vars.project_folder}/assets/txt"
  nlp_model: "es_core_news_lg"
  model: "Qwen/Qwen2-VL-2B-Instruct"
  code_model: "Qwen/Qwen2.5-Coder-7B-Instruct"
  dataset_name: "fmb-quibdo/sergio-notebooks"
  adjusted_image_folder: "${vars.project_folder}/assets/adjusted"
  chunked_image_folder: "${vars.project_folder}/assets/chunks"
  num_chunks: 4
  overlap_percentage: 10
  transcribed_chunks_folder: "${vars.project_folder}/assets/txt_chunks"
  prompt: "Extract all text line by line. Do not number lines. RETURN ONLY PLAIN TEXT. SAY NOTHING ELSE"
  recombined_folder: "${vars.project_folder}/assets/recombined"
  cleaned_folder: "${vars.project_folder}/assets/cleaned"
  data_folder: "${vars.project_folder}/assets/data"
  llm_model: "mistral:instruct" # Options: "chatgpt-4.0-mini", "llama3.1:8b"
  word_folder: "${vars.project_folder}/assets/word"
  word_pretty_folder: "${vars.project_folder}/assets/word_pretty"
  exported_data_folder: "${vars.project_folder}/assets/exported_data"
  markdown_folder: "${vars.exported_data_folder}/markdown"
  html_folder: "${vars.exported_data_folder}/html"
  markdown_image_folder: "${vars.markdown_folder}/images"
  html_image_folder: "${vars.html_folder}/images"

directories: ["${vars.project_folder}/assets", "configs", "scripts","_site","_templates","prompts", "pipelines", "packages", "${vars.word_folder}", "${vars.exported_data_folder}", "${vars.markdown_folder}", "${vars.html_folder}", "${vars.markdown_image_folder}", "${vars.html_image_folder}", "${vars.image_folder}"]

workflows:
  all:
    - metadata
    - crop
    - split
    - rotate
    - adjust_image
    - chunk
    - transcribe
    - recombine_chunks
    - fuzzy_clean
    - process_json
    - process_ner
    - process_llm_clean
    - process_llm_translate
    - process_llm_summarize
    - process_llm_clean_ner
    - combine_to_word
    - combine_to_word_pretty
    - export_to_excel
    - export_to_markdown
    - export_to_html
    - dataset
    - publish
    # - remove_background

  all-no-metadata:
    - crop
    - split
    - rotate
    - adjust_image
    - chunk
    - transcribe
    - recombine_chunks
    - fuzzy_clean
    - process_json
    - process_ner
    - process_llm_clean
    - process_llm_translate
    - process_llm_summarize
    - process_llm_clean_ner
    - combine_to_word
    - combine_to_word_pretty
    - export_to_excel
    - export_to_markdown
    - export_to_html
    - dataset
    - publish
    # - remove_background

  all-ocr:
    - transcribe
    - recombine_chunks
    - fuzzy_clean
    - process_json
    - process_ner
    - process_llm_clean
    - process_llm_translate
    - process_llm_summarize
    - process_llm_clean_ner
    - combine_to_word
    - combine_to_word_pretty
    - export_to_excel
    - export_to_markdown
    - export_to_html
    - dataset
    - publish

  combine_to_word_only:
    - combine_to_word
    - combine_to_word_pretty
    - export_to_excel
    - export_to_markdown
    - export_to_html

commands:
  - name: metadata
    help: "Read existing metadata file save as metadata.json"
    script:
      - "python scripts/metadata.py \"${vars.metadata_file}\" metadata.json"
    outputs:
      - metadata.json

  - name: crop
    help: "Crop the images to remove unnecessary borders. Optionally split PDFs into images before cropping."
    script:
      - "python scripts/crop.py ${vars.image_folder} ${vars.cropped_image_folder}"
    outputs:
      - ${vars.cropped_image_folder}

  - name: split
    help: "Split the images into single-page images for processing. Remove ruler from image"
    script:
      - "python scripts/split.py ${vars.cropped_image_folder} ${vars.split_image_folder}"
    outputs:
      - ${vars.split_image_folder}

  - name: rotate
    help: "Rotate the split images to straighten text."
    script:
      - "python scripts/rotate.py ${vars.split_image_folder} ${vars.rotated_image_folder}"
    outputs:
      - ${vars.rotated_image_folder}
 
  # - name: remove_background
  #   help: "Remove black and purple background from images."
  #   script:m
  #     - "python scripts/remove_background.py ${vars.rotated_image_folder} ${vars.background_removed_image_folder}"
  #   outputs:
  #     - ${vars.background_removed_image_folder}

  - name: adjust_image
    help: "Adjust contrast, exposure, and histogram of images to enhance text visibility."
    script:
      - "python scripts/adjust_image.py ${vars.rotated_image_folder} ${vars.adjusted_image_folder}"
    outputs:
      - ${vars.adjusted_image_folder}

  - name: chunk
    help: "Chunk the images into subfolders based on the file name of the image."
    script:
      - "python scripts/chunk.py ${vars.adjusted_image_folder} ${vars.chunked_image_folder} --num-chunks ${vars.num_chunks} --overlap-percentage ${vars.overlap_percentage}"
    outputs:
      - ${vars.chunked_image_folder}

  - name: transcribe
    help: "Transcribe the images"
    script:
      - "python scripts/transcribe.py ${vars.chunked_image_folder} ${vars.model} ${vars.transcribed_chunks_folder} '${vars.prompt}'"
    outputs:
      - ${vars.transcribed_chunks_folder}

  - name: recombine_chunks
    help: "Recombine the transcribed chunks into single markdown files"
    script:
      - "python scripts/recombine_chunks.py ${vars.transcribed_chunks_folder} ${vars.recombined_folder}"
    outputs:
      - ${vars.recombined_folder}

  - name: fuzzy_clean
    help: "Clean the transcriptions using fuzzy matching"
    script:
      - "python scripts/fuzzy_clean.py ${vars.recombined_folder} ${vars.cleaned_folder}"
    outputs:
      - ${vars.cleaned_folder}

  - name: process_json
    help: "Process the transcriptions and save to JSONL"
    script:
      - "python scripts/process_json.py ${vars.cleaned_folder} ${vars.adjusted_image_folder} ${vars.data_folder}/data.jsonl"
    outputs:
      - ${vars.data_folder}/data.jsonl

  - name: process_ner
    help: "Perform named entity recognition (NER) on the JSONL file"
    script:
      - "python scripts/process_ner.py ${vars.data_folder}/data.jsonl ${vars.nlp_model}"
    outputs:
      - ${vars.data_folder}/data_ner.jsonl

  - name: process_llm_clean
    help: "Perform LLM processing on the JSONL file (Clean)"
    script:
      - "python scripts/process_llm_clean.py ${vars.data_folder}/data_ner.jsonl ${vars.llm_model} cleaned_text"
    outputs:
      - ${vars.data_folder}/data_ner.jsonl

  - name: process_llm_translate
    help: "Perform LLM processing on the JSONL file (Translate)"
    script:
      - "python scripts/process_llm_translate.py ${vars.data_folder}/data_ner.jsonl ${vars.llm_model} english_translation"
    outputs:
      - ${vars.data_folder}/data_ner.jsonl

  - name: process_llm_summarize
    help: "Perform LLM processing on the JSONL file (Summarize)"
    script:
      - "python scripts/process_llm_summarize.py ${vars.data_folder}/data_ner.jsonl ${vars.llm_model} summary"
    outputs:
      - ${vars.data_folder}/data_ner.jsonl

  - name: process_llm_clean_ner
    help: "Perform LLM processing on the JSONL file (Clean NER)"
    script:
      - "python scripts/process_llm_clean_ner.py ${vars.data_folder}/data_ner.jsonl ${vars.llm_model} cleaned_ner"
    outputs:
      - ${vars.data_folder}/data_ner.jsonl

  - name: combine_to_word
    help: "Combine JSONL data and images into Word documents"
    script:
      - "python scripts/combine_to_word.py ${vars.data_folder}/data_ner.jsonl ${vars.adjusted_image_folder} ${vars.word_folder}"
    outputs:
      - ${vars.word_folder}/SM_NPQ_C01.docx
      - ${vars.word_folder}/SM_NPQ_C02.docx
      - ${vars.word_folder}/SM_NPQ_C03.docx
      - ${vars.word_folder}/SM_NPQ_C04.docx
      - ${vars.word_folder}/SM_NPQ_C05.docx

  - name: combine_to_word_pretty
    help: "Combine JSONL data into Word documents without images"
    script:
      - "python scripts/combine_to_word_pretty.py ${vars.data_folder}/data_ner.jsonl ${vars.word_pretty_folder}"
    outputs:
      - ${vars.word_pretty_folder}/SM_NPQ_C01.docx
      - ${vars.word_pretty_folder}/SM_NPQ_C02.docx
      - ${vars.word_pretty_folder}/SM_NPQ_C03.docx
      - ${vars.word_pretty_folder}/SM_NPQ_C04.docx
      - ${vars.word_pretty_folder}/SM_NPQ_C05.docx

  - name: export_to_csv
    help: "Export JSONL data to CSV"
    script:
      - "python scripts/export_to_csv.py ${vars.data_folder}/data_ner.jsonl ${vars.exported_data_folder}"
    outputs:
      - ${vars.exported_data_folder}/exported_data.csv

  - name: export_to_excel
    help: "Export JSONL data to Excel"
    script:
      - "python scripts/export_to_excel.py ${vars.data_folder}/data_ner.jsonl ${vars.exported_data_folder}"
    outputs:
      - ${vars.exported_data_folder}/exported_data.xlsx

  - name: export_to_markdown
    help: "Export JSONL data to Markdown files"
    script:
      - "python scripts/export_to_markdown.py ${vars.data_folder}/data_ner.jsonl ${vars.markdown_folder} ${vars.markdown_image_folder} ${vars.adjusted_image_folder}"
    outputs:
      - ${vars.markdown_folder}/

  - name: export_to_html
    help: "Export JSONL data to HTML files"
    script:
      - "python scripts/export_to_html.py ${vars.data_folder}/data_ner.jsonl ${vars.html_folder} ${vars.html_image_folder} ${vars.adjusted_image_folder}"
    outputs:
      - ${vars.html_folder}/

  - name: dataset
    help: "Create a Hugging Face Dataset"
    script:
      - "python scripts/dataset.py ${vars.cleaned_folder} ${vars.dataset_name}"
    outputs:
      - ${vars.project_folder}/assets/dataset/metadata.jsonl

  - name: publish
    help: "Publish the project"
    script:
      - "python scripts/publish.py ${vars.split_image_folder} ${vars.split_image_folder}/data.jsonl _site"
    outputs:
      - _site/

  - name: weasel
    help: "Force the weasel command to run again"
    script:
      - "python scripts/weasel.py --force"
    outputs:
      - weasel_output/
